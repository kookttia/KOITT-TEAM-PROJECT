#server port
server.port=8181

#devtool build automation
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

#view : thymeleaf
# thymeleaf setting
spring.thymeleaf.cache=false
# thymeleaf => javascript, css : path error patch !
# spring.thymeleaf.mode=LEGACYHTML5

#context path
server.servlet.context-path=/RattaDoEat

#session
server.servlet.session.persistent=true
server.servlet.session.timeout=24h

#oracle setting
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=rattadoeat
spring.datasource.password=rattadoeat
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver

# for log4jdbc config 바꿔줌. 
spring.datasource.driverClassName=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:oracle:thin:@localhost:1521:XE
spring.datasource.sql-script-encoding=UTF-8


#################################   DB 설정 JPA, mybatis    ######################

mybatis.configuration.map-underscore-to-camel-case=true
#jpa 설정
#

spring.jpa.database-platform=org.hibernate.dialect.Oracle12cDialect
spring.jpa.show-sql=true 
#로그
# 실행시 경고(warning) 메시지 제거  
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# SQL log 읽기 가독성 확보
spring.jpa.properties.hibernate.format_sql=true

######################################################
#jpa table create
# spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.hibernate.ddl-auto=update
## jpa로 테이블을 업데이트하거나 만들려면 위의 설정을 사용.


# Encoding
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

#웹자르랑 같이 쓰면 중복됨; 절대경로만 쓰는걸로 메타데이터 
# Static Resources (CSS, Javascript etc)
# spring.mvc.static-path-pattern=/static/**
# spring.resources.static-locations=classpath:/static/
# spring.resources.add-mappings=true




# logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%-5level] [%logger{36}] - %msg%n
logging.level.org.hibernate.SQL=debug
# SQL log 읽기 설정
logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.=debug

#file upload
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

#resources path
spring.mvc.static-path-pattern=/resources/**


#업로드 파일 경로 관리용
#value 어노테이션 
resources.location:/upload/
resources.uri_path=/upload